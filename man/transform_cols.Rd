% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform-cols.R
\name{transform_cols}
\alias{transform_cols}
\alias{transform_cols.CsparseMatrix}
\alias{transform_cols.matrix}
\title{Transform Sparse Matrix columns}
\usage{
transform_cols(x, fun, ..., which.cols, drop, name.sep)

\method{transform_cols}{CsparseMatrix}(x, fun, ..., which.cols, drop = FALSE, name.sep = NULL)

\method{transform_cols}{matrix}(x, fun, ..., which.cols, drop = FALSE, name.sep = NULL)
}
\arguments{
\item{x}{A \code{matrix} or \code{CsparseMatrix}.}

\item{fun}{A user-supplied function to apply to the specified columns.}

\item{...}{Additional arguments to pass to \code{fun}.}

\item{which.cols}{A numeric vector indicating column indices or a character
vector indicating column names.}

\item{drop}{A logical value. If \code{fun} works with columnar matrices, then set
\code{drop = FALSE}, otherwise if \code{fun} requires a numeric vector set
\code{drop = TRUE}.}

\item{name.sep}{A character vector of length 1 or \code{nrow(x)} that will be
appended to existing column names to create new columns. Providing this
argument ensures that the transformed columns will be appended as new
matrix columns. If \code{name.sep} is \code{NULL} the specified columns will be
transformed in-place. If \code{name.sep} is provided, but is faulty, the
specified columns will be appended as new columns but will have un-changed
column names.}
}
\description{
\code{transform_cols()} transforms specified matrix columns with a user-supplied
function.
}
\details{
\code{transform_cols()} is an S3 generic with methods for:
\itemize{
\item{
\code{CsparseMatrix}
}
\item{
\code{matrix}
}
}
}
\examples{
x <- Matrix::rsparsematrix(10, 4, .9)
colnames(x) <- paste0("x", 1:4)
x

transform_cols(x, fun = function(i) i^2, which.cols = paste0("x", 3:4))
transform_cols(x, fun = scale, which.cols = 3:4, drop = TRUE)
transform_cols(x, fun = scale, which.cols = 3:4, name.sep = "normalized")

}
